<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<T3locallang>
	<meta type="array">
		<description>Contents of scheduler csh</description>
		<type>CSH</type>
		<csh_table>_MOD_tools_txschedulerM1</csh_table>
		<fileId>EXT:scheduler/mod1/locallang_csh_scheduler.xml</fileId>
		<labelContext type="array">
		</labelContext>
	</meta>
	<data type="array">
		<languageKey index="default" type="array">
			<label index=".alttitle">Scheduler</label>
			<label index=".description">The Scheduler provides an interface to register and manage recurring or one-time tasks.</label>
			<label index=".syntax">
				The Scheduler uses a single cron job which handles all registered tasks. It is thus very convenient as a single cron job needs to be set up and all task frequencies can be managed from the BE module.
			</label>
			<label index="task_class.alttitle">Class of the task</label>
			<label index="task_class.description">Choose a class from the list of available tasks</label>
			<label index="task_class.details">
				The tasks are provided by various extensions. See the manual to learn how to create your own tasks and register them with the Scheduler.
			</label>
			<label index="task_disable.alttitle">Disable task</label>
			<label index="task_disable.description">Check this box to disable the automatic, scheduled execution of this task. It can still be launched manually from the BE module.</label>
			<label index="task_arguments.alttitle">Additional call arguments</label>
			<label index="task_arguments.description">Enter whatever arguments exist for the chosen task class</label>
			<label index="task_arguments.details">
				Call arguments are entered using a syntax similar to HTTP query strings, i.e. &amp;arg1=value1&amp;arg2=value2 etc.
			</label>
			<label index="task_type.alttitle">Type of task</label>
			<label index="task_type.description">Choose whether the task must happen a single time or will be repeated</label>
			<label index="task_start.alttitle">Start of task</label>
			<label index="task_start.description">Enter a start date and time for the task</label>
			<label index="task_start.details">
				Date must be entered in a standard format like HH:mm dd-mm-YYYY or YYYY-mm-dd HH:mm. Natural keywords can also be used, like "now" or "tomorrow".
				Date and time must correspond to the server's time zone.
			</label>
			<label index="task_end.alttitle">End of task</label>
			<label index="task_end.description">Enter an end date and time for the task, can be blank</label>
			<label index="task_end.details">
				Date must be entered in a standard format like HH:mm dd-mm-YYYY or YYYY-mm-dd HH:mm. Natural keywords can also be used, like "now" or "tomorrow".
				Date and time must correspond to the server's time zone.

				Can be left blank, if task is not supposed to end at any point.
			</label>
			<label index="task_frequency.alttitle">Frequency of task</label>
			<label index="task_frequency.description">Enter a frequency, either in seconds or using a cron-like syntax</label>
			<label index="task_frequency.details">
				The frequency of the task can be simply entered as a number of seconds.

				Alternately it is possible to use the same syntax as for cron jobs. This is simply a list of five numbers or the wildcard "*", separated by blanks. The five numbers are (in order) minutes, hours, day of month, months and day of week. Examples:

				*/5 * * * * means every 5 minutes
				30 22 * * * means every day at 22:30
			</label>
			<label index="task_frequency.seeAlso">
				Wikipedia reference|http://en.wikipedia.org/wiki/Cron
			</label>
			<label index="task_multiple.alttitle">Multiple executions</label>
			<label index="task_multiple.description">Choose whether a task can be running several times simultaneously or not</label>
			<label index="task_email.alttitle">Email address</label>
			<label index="task_email.description">Enter a recipient for the mails sent by the test task</label>
			<label index="task_sleepTime.alttitle">Sleep time</label>
			<label index="task_sleepTime.description">Enter a number of seconds during which the task will just sleep.</label>
		</languageKey>
	</data>
</T3locallang>
